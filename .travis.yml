language: nix

env:
  global:
    - CACHIX_CACHE=peel
    
os:
 - osx
 - linux
 
sudo: yes

cache:
  directories:
  - $HOME/nix.store
before_cache:
  - mkdir -p $HOME/nix.store
  - nix copy --to file://$HOME/nix.store -f default.nix buildInputs

before_install:
   - travis_retry nix-channel --update
   - sudo mkdir -p /etc/nix
   - echo "trusted-users = root $USER" | sudo tee -a /etc/nix/nix.conf
   - echo 'require-sigs = false' | sudo tee -a /etc/nix/nix.conf > /dev/null
   - echo "substituters = https://cache.nixos.org/ https://peel.cachix.org https://cachix.cachix.org file://$HOME/nix.store" | sudo tee -a /etc/nix/nix.conf > /dev/null
   - echo 'trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= peel.cachix.org-1:juIxrHgL76bYKcfIB/AdBUQuwkTwW5OLpPvWNuzhNrE= cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM=' | sudo tee -a /etc/nix/nix.conf > /dev/null
   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo launchctl stop org.nixos.nix-daemon; fi 
   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo launchctl start org.nixos.nix-daemon && sleep 5; fi
   - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sudo ln -s private/var/run /run; fi
  
install:
   - if [ -n "${CACHIX_CACHE}" ]; then nix-env -if https://github.com/cachix/cachix/tarball/master --substituters https://cachix.cachix.org --trusted-public-keys cachix.cachix.org-1:eWNHQldwUO7G2VkjpnjDbWwy4KQ/HNxht7H4SSoMckM=; fi
   - if [ -n "${CACHIX_CACHE}" ]; then cachix use "${CACHIX_CACHE}"; fi
   - nix-env -iA nixpkgs.emacs
   - mkdir -p ~/.emacs.d && curl -sSL https://raw.githubusercontent.com/hniksic/emacs-htmlize/master/htmlize.el --output ~/.emacs.d/htmlize.el

script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then nix-channel --add https://github.com/LnL7/nix-darwin/archive/master.tar.gz darwin && nix-channel --update; fi
  - nix-env -f default.nix -i
  - dotfiles install
  - dotfiles link
  - dotfiles uninstall
  - emacs=$(nix-build ./overlays/20-emacs/emacs/default.nix) && echo Produced $emacs

after_success:
  - git tag "${TRAVIS_BUILD_NUMBER}" -m "üöÄÔ∏è ship it" && git push origin "${TRAVIS_BUILD_NUMBER}"
  - cd docs && emacs -Q index.org --batch --eval "(progn (load \"~/.emacs.d/htmlize.el\")(org-babel-tangle)(org-html-export-to-html))" --kill
  - if [ -n "${CACHIX_CACHE}" ]; then cachix push "${CACHIX_CACHE}" $emacs; fi
  
deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: true
  local-dir: docs
  target-branch: gh-pages
  fqdn: dotfiles.codearsonist.com
  on:
    branch: master
